{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Model/Metal.ts","webpack:///./src/app/Model/Stone.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.config.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { MetalType } from '../app.config';\n\nexport class Metal {\n\n    constructor(public weight: number = 0,\n                public type: MetalType = MetalType.None) { }\n}","import { StoneShape as StoneShape, StoneSettingType as StoneSettingType } from \"../app.config\";\n\nexport class Stone {\n\n    constructor(public shape: StoneShape = StoneShape.None,\n                public count: number = 0,\n                public carat: number = 0,\n                public settingType: StoneSettingType = StoneSettingType.pave) { }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n</div>\\n\\n<div class=\\\"layout\\\">\\n  <form [formGroup]=\\\"form\\\">\\n    <div>\\n      <label>Jewelry Name:</label>\\n      <input type=\\\"text\\\" placeholder=\\\"Insert a name...\\\" formControlName=\\\"jewelryName\\\">\\n    </div>\\n    <div>\\n      <label>Working Hours:</label>\\n      <input type=\\\"number\\\" formControlName=\\\"workingHours\\\">\\n    </div>\\n    <div>\\n      <label>Salary Per Working Hour:</label>\\n      <input type=\\\"number\\\" formControlName=\\\"salaryPerHour\\\">\\n    </div>\\n    <div>\\n      <label>Indirect expenses:</label>\\n      <input type=\\\"number\\\" formControlName=\\\"indirectExpenses\\\">\\n    </div>\\n\\n    <!-- Metals List -->\\n    <div formArrayName=\\\"metals\\\">\\n      <h3>Metals:</h3>\\n      <div *ngFor=\\\"let metal of metalForms.controls; let i=index\\\" [formGroupName]=\\\"i\\\" class=\\\"metal\\\">\\n        <div>{{ i+1 }}.</div>\\n        <div #metalType>\\n          <label>Type:</label>\\n          <select formControlName=\\\"type\\\">\\n            <option *ngFor=\\\"let metalType of metalTypes\\\">{{ metalType }}</option>\\n          </select>\\n        </div>\\n        <div #metalWeight>\\n          <label>Weight:</label>\\n          <input type=\\\"number\\\" formControlName=\\\"weight\\\">\\n        </div>\\n        <button (click)=\\\"removeMetal(i)\\\">Remove</button>\\n      </div>\\n      <button (click)=\\\"addMetal()\\\">Add New Metal</button>\\n    </div>\\n  \\n    <!-- Stones List -->\\n    <div formArrayName=\\\"stones\\\">\\n      <h3>Stones:</h3>\\n      <div *ngFor=\\\"let stone of stoneForms.controls; let i=index\\\" [formGroupName]=\\\"i\\\" class=\\\"stone\\\">\\n        <div>{{ i+1 }}.</div>\\n        <div #stoneShape>\\n          <label>Shape:</label>\\n          <select formControlName=\\\"shape\\\">\\n            <option *ngFor=\\\"let stoneShape of stoneShapes\\\">{{ stoneShape }}</option>\\n          </select>\\n        </div>\\n        <div #stoneCarat>\\n          <label>Carat:</label>\\n          <input type=\\\"number\\\" formControlName=\\\"carat\\\">\\n        </div>\\n        <div #stoneCount>\\n          <label>Count:</label>\\n          <input type=\\\"number\\\" formControlName=\\\"count\\\">\\n        </div>\\n        <div #stoneSettingType>\\n          <label>Setting Type:</label>\\n          <select formControlName=\\\"settingType\\\">\\n            <option *ngFor=\\\"let stoneSettingType of stoneSettingTypes\\\">{{ stoneSettingType }}</option>\\n          </select>\\n        </div>\\n        <button (click)=\\\"removeStone(i)\\\">Remove</button>\\n      </div>\\n      <button (click)=\\\"addStone()\\\">Add New Stone</button>\\n    </div>\\n  \\n  \\n  \\n    <!-- <div>\\n      <label>Stone Setting Price:</label>\\n      <input type=\\\"number\\\" [formControl]=\\\"form.indirectExpenses\\\">\\n      salary: {{form.indirectExpenses.value}}\\n    </div> -->\\n  \\n    <div #clientPriceConstant>\\n      <label>Client Price Constant:</label>\\n      <input type=\\\"number\\\" formControlName=\\\"clientPriceConstant\\\">\\n      <!-- const: {{form.clientPriceConstant.value}} -->\\n    </div>\\n  \\n    <div #businessPriceConstant>\\n      <label>Business Price Constant:</label>\\n      <input type=\\\"number\\\" formControlName=\\\"businessPriceConstant\\\">\\n      <!-- const: {{form.businessPriceConstant.value}} -->\\n    </div>\\n  \\n    <button (click)=\\\"onSubmit()\\\">Submit</button>\\n    <hr />\\n    <div>\\n      <label>Final Total Expense:</label>\\n      <span>{{ finalPrice | currency:'ILS':'symbol':'1.0-0' }}</span>\\n    </div>\\n    <div>\\n      <label>Final Client Price:</label>\\n      <span>{{ finalPrice * form.get('clientPriceConstant').value | currency:'ILS':'symbol':'1.0-0' }}</span>\\n    </div>\\n    <div>\\n      <label>Final Business Price:</label>\\n      <span>{{ finalPrice * form.get('businessPriceConstant').value | currency:'ILS':'symbol':'1.0-0' }}</span>\\n    </div>\\n  </form>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","module.exports = \".metal {\\n  display: grid;\\n  grid-template-columns: 2% auto auto auto; }\\n\\n.stone {\\n  display: grid;\\n  grid-template-columns: 2% auto auto auto auto auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbG9uLmJsdW1lbnJlaWNoL1ByaXZhdGUvQ29kZXMvamV3ZXJseVByaWNlQ2FsY3VsYXRvci9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJLGFBQWE7RUFDYix3Q0FBK0QsRUFBQTs7QUFHbkU7RUFDSSxhQUFhO0VBQ2Isa0RBQXlFLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbiRyb3ctaW5kZXgtY29udGFpbmVyLXNpemU6IDIlO1xuXG4ubWV0YWx7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6ICRyb3ctaW5kZXgtY29udGFpbmVyLXNpemUgYXV0byBhdXRvIGF1dG87XG59XG5cbi5zdG9uZXtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogJHJvdy1pbmRleC1jb250YWluZXItc2l6ZSBhdXRvIGF1dG8gYXV0byBhdXRvIGF1dG87XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, FormArray } from '@angular/forms';\nimport { StoneShape, StoneSettingType, MetalType, metalPricePerGram, stoneSettingPrice } from './app.config';\nimport { Metal } from './Model/Metal';\nimport { Stone } from './Model/Stone';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'jewelryPriceCalculator';\n\n  metalTypes: MetalType[];\n  stoneShapes: StoneShape[];\n  stoneSettingTypes: StoneSettingType[];\n\n  form: FormGroup;\n\n  finalPrice:number = 0;\n\n  constructor(private formBuilder: FormBuilder)\n  {}\n\n  ngOnInit(){\n    \n    this.metalTypes = Object.values(MetalType);\n    this.stoneShapes = Object.values(StoneShape);\n    this.stoneSettingTypes = Object.values(StoneSettingType);\n\n    this.form = this.formBuilder.group({\n      jewelryName: '',\n      workingHours: 0,\n      salaryPerHour: 80,\n      indirectExpenses: 23,\n      metals: this.formBuilder.array([this.formBuilder.group(new Metal())]),\n      stones: this.formBuilder.array([this.formBuilder.group(new Stone())]),\n      clientPriceConstant: 2.2,\n      businessPriceConstant: 3,\n    });\n\n    this.form.valueChanges.subscribe((form) => {\n      console.log(form);\n      this.onSubmit();\n    })\n  }\n\n  get metalForms(){\n    return this.form.get('metals') as FormArray;\n  }\n\n  addMetal(){\n    this.metalForms.push(this.formBuilder.group(new Metal()));\n  }\n\n  removeMetal(index){\n    this.metalForms.removeAt(index);\n  }\n\n  get stoneForms(){\n    return this.form.get('stones') as FormArray;\n  }\n\n  addStone(){\n    this.stoneForms.push(this.formBuilder.group(new Stone()));\n  }\n\n  removeStone(index){\n    this.stoneForms.removeAt(index);\n  }\n\n  onSubmit(){\n    this.finalPrice = this.calculatePrice();\n  }\n\n  calculatePrice(){\n    const finalWorkingSalary = this.form.get('workingHours').value * this.form.get('salaryPerHour').value;\n    const indirectExpenses = this.form.get('indirectExpenses').value * this.form.get('workingHours').value;\n\n    const finalMetalsExpenses = this.metalForms.value.reduce((acc, metal) => {\n      const weight = metal.weight;\n      const type = metal.type;\n      return acc + (weight * metalPricePerGram[type]);\n    }, 0);\n\n    const finalDiamondsExpenses = this.stoneForms.value.reduce((acc, stone) => {\n      const shape = stone.shape;\n      const carat = stone.carat;\n      const count = stone.count;\n      const diamondSettingType = stone.settingType;\n      return acc + (this.getDiamondPrice(shape, carat) * count) + (count * stoneSettingPrice[diamondSettingType])\n    }, 0);\n\n    return finalWorkingSalary + indirectExpenses + finalMetalsExpenses + finalDiamondsExpenses;\n  }\n\n  getDiamondPrice(shape: StoneShape, carat: number){\n    return 100; // 150000 jpy\n  }\n}\n\n\n","export enum MetalType {\n    None = '',\n    gold14kg = 'Gold 14K',\n    gold18kg = 'Gold 18K',\n    platinum = 'Platinum',\n    silver = 'Silver'\n}\n\nexport const metalPricePerGram = {\n    [MetalType.gold14kg]: 101.36,\n    [MetalType.gold18kg]: 129.949,\n    [MetalType.platinum]: 110.16,\n    [MetalType.silver]: 2.01,\n    [MetalType.None]: 0,\n}\n\nexport enum StoneShape {\n    None = '',\n    round = 'Round',\n    oval = 'Oval',\n    marquise = 'Marquise',\n    pear = 'Pear',\n    emerald = 'Emerald',\n    princess = 'Princess'\n}\n\nexport enum StoneSettingType {\n    pave = 'Pave',\n    bazel = \"Bazel\",\n}\n\nexport const stoneSettingPrice = {\n    [StoneSettingType.pave]: 5.5,\n    [StoneSettingType.bazel]: 24.3,\n}\n\nexport const stonePrice = {\n\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}